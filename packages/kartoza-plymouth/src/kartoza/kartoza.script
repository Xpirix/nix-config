//------------------------------------- Password prompt -------------------------------
fun DisplayPasswordCallback(nil, bulletCount) {
    state.status = "pause";
    totalWidth = bulletCount * bullet.image.GetWidth();
    startPos = screen.half.w - totalWidth / 2;

    // Calculate dimensions for the dark background rounded rectangle
    int backgroundWidth = (totalWidth > prompt.image.GetWidth() ? totalWidth : prompt.image.GetWidth()) + 40; // Add padding
    int backgroundHeight = prompt.image.GetHeight() * 6 + 40; // Adjust height to cover prompt and bullets with padding
    int backgroundX = screen.half.w - backgroundWidth / 2;
    int backgroundY = screen.half.h - prompt.image.GetHeight() * 2 - 20;

    // Draw the dark background rounded rectangle
    background.image = Image.RoundedRectangle(backgroundWidth, backgroundHeight, 20, 0, 0, 0); // Black color rectangle with 20px radius
    background.sprite = Sprite(background.image);
    background.sprite.SetX(backgroundX);
    background.sprite.SetY(backgroundY);

    // Make the prompt text bigger by increasing the font size
    prompt.image = Image.Text("Enter Password", 2, 2, 2); // Increased font size
    prompt.sprite = Sprite(prompt.image);
    prompt.sprite.SetX(screen.half.w - prompt.image.GetWidth() / 2);
    prompt.sprite.SetY(screen.half.h - prompt.image.GetHeight() * 2); // Adjusted to center vertically

    // Clear all bullets (user might hit backspace)
    bullets = arrayOfNulls(bulletCount);
    for (i = 0; i < bulletCount; i++) {
        // Make the bullet images bigger by increasing the font size
        bullets[i] = Sprite(Image.Text("*", 2, 2, 2)); // Increased font size
        bullets[i]?.SetX(startPos + i * bullets[i].GetWidth());
        bullets[i]?.SetY(screen.half.h + bullets[i].GetHeight()); // Adjusted to center vertically below the prompt
    }
}
Plymouth.SetDisplayPasswordFunction(DisplayPasswordCallback);
